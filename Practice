/**
 * You can edit, run, and share this code.
 * play.kotlinlang.org
 */



/*fun main(args: Array<String>) {
    var a=40
    print(a)
    var `try`= 20
    println(`try`)
    
   //2nd code 
   val b= 30
    //b+=20 error is val can't be reassigned
    
    //3rd code
     var c=20
    var d:String
    println(c)
    
    //4th code 
    var message="hello"
    print(message)
}
//print(message)
*/
/*class Person{
     var kotlin="hello"
    fun display(){
        print(kotlin)
    }
}
    fun main(){
        val person= Person()
        person.display()
    }
    */

//20th august

/*fun main(){
    val a=10
    val b=20
    val result="The sum of $a and $b is ${a + b}" //string interpolation
    print(result)
}
*/


/*fun main(){
    val letter:Char
    letter='A'
    print("$letter")
    print('\n') //prints a new line character
    print('\$') //prints the $ symbol
    print("\\") //prints the / symbol
    
}*/

fun main(){
    val name= "Abhisathvika \nAbhisathvika \nAbhisathvika \nAbhisathvika \nAbhisathvika"
    val name1= """
    Abhisathvika
    Abhisathvika
    Abhisathvika
    Abhisathvika
    Abhisathvika"""
    print(name1)
    print('\n')
    
    val name2="""Abhisathvika
    Abhisathvika
    	Abhisathvika
        	Abhisathvika"""
    print(name2)
    print('/n')
    val name3= """\tAbhi
    Abhi\tAbhi
    \tAbhi"""
print(name3)
    
}

//21st August, 2024

/*fun main(){
    val numbers= arrayOf(1,2,3,4,5) //1d array
    val words: Array<String> = arrayOf("Kotlin", "java", "python")
    val squares = Array(5){i-> i*i} //lambda function 
    println(numbers[0])
    println(words[1])
    println(squares[2])
    val firstNumber = numbers[0]
    val secondWord = words[1]
    println("first number : $firstNumber")
    println(secondWord)
    numbers[0] =10 //modifying the value
    println(numbers[0])
    println("Modified Array:")
    for(num in numbers){ // to get the whole array
        println("$num")
    }
    
    val matrix = arrayOf(
        arrayOf(5,6,7,8,9),
        arrayOf(7,8,9,10),
        arrayOf(11,12,1,4))
    println(matrix[0][1])//creating matrix
    
}*/

/*fun main(args: Array<String>){// type conversion
    val x : Int = 100 
    val y: Long =x.toLong() 
    println(y)
}*/

//safe and unsafe casting 
fun main(){
    var a = "hi"
    var b :String = a as String
    println("unsafe casting result : $b")
    //val c :Int = a as Int
    //println("unsafe casting result: $c")// here we will get classcastexception
    val d: Int?= a as? Int
    println("safe casting: $d")
    
}
